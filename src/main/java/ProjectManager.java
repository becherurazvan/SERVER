/**
 * Created by rbech on 1/26/2016.
 */

import Database.DB;
import Entities.Project;
import Entities.User;
import Requests.CreateProjectRequest;
import Requests.LoginRequest;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.api.services.drive.Drive;
import com.google.api.services.drive.model.File;
import com.google.api.services.drive.model.ParentReference;

import java.io.IOException;
import java.util.Arrays;

import static spark.Spark.*;

public class ProjectManager {
    public ProjectManager() {


        post("/create_project", (request, response) -> {
            ObjectMapper mapper = new ObjectMapper();
            CreateProjectRequest createProjectRequest = mapper.readValue(request.body(), CreateProjectRequest.class);
            System.out.println("Received : " + request.body());

            String projectOwner = createProjectRequest.getEmail();
            String projectName = createProjectRequest.getProjectName();

            Project p = new Project(projectOwner,projectName);
            DB.getInstance().addProject(p);
            User owner = DB.getInstance().getUser(p.getLeaderEmail());
            Thread t = new Thread(new ProjectInitializer(p,main.getDriveService(owner.getAccessToken(), owner.getRefreshToken())));
            t.start();

            return mapper.writeValueAsString(p);
        });
    }

    public class ProjectInitializer implements Runnable{
        Project p;
        Drive d;
        public ProjectInitializer(Project p, Drive d){
            this.p = p;
            this.d  =d;
        }

        @Override
        public void run() {

            try {
                System.out.println("Initializing project >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");



                File body = new File();
                body.setTitle(p.getTitle());
                body.setDescription("This folder was created using the scrum companion server");
                body.setMimeType("application/vnd.google-apps.folder");
                body.setFolderColorRgb("#ffd83b");

                File f = d.files().insert(body).execute();

                String folderId = f.getId();

                File copiedFile = new File();
                copiedFile.setTitle("Product Backlog From Server");
                copiedFile.setDescription("Product backlog automatically generated by SCRUM companion server");
                copiedFile.setParents(Arrays.asList(new ParentReference().setId(folderId)));



                d.files().copy("1BjVv7JYap_j3Rw3_sP36-JN3Hlw7omekT4nZkaJpUJY", copiedFile).execute();

            }catch (Exception e){
                e.printStackTrace();
            }

        }
    }


}
